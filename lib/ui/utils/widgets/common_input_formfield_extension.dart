import 'package:flutter/services.dart';
import 'package:odigov3/ui/utils/theme/theme.dart';
import 'package:odigov3/ui/utils/widgets/common_form_field.dart';

extension CommonInputFormFieldCopyWith on CommonInputFormField {
  CommonInputFormField copyWith({
    TextEditingController? textEditingController,
    Function(String)? onSelected,
    String? Function(String?)? validator,
    FocusNode? focusNode,
    String? placeholderText,
    TextStyle? placeholderTextStyle,
    String? hintText,
    TextStyle? hintTextStyle,
    double? fieldWidth,
    double? fieldHeight,
    Color? backgroundColor,
    Color? borderColor,
    double? borderWidth,
    BorderRadius? borderRadius,
    TextStyle? fieldTextStyle,
    ValueChanged<String>? onFieldSubmitted,
    TextStyle? counterStyle,
    int? maxLines,
    int? maxLength,
    List<TextInputFormatter>? textInputFormatter,
    TextInputAction? textInputAction,
    TextInputType? textInputType,
    TextCapitalization? textCapitalization,
    bool? isEnable,
    Widget? prefixWidget,
    Widget? suffixWidget,
    InputDecoration? inputDecoration,
    bool? obscureText,
    double? leftPadding,
    double? rightPadding,
    double? topPadding,
    double? bottomPadding,
    double? fontSize,
    Function(dynamic text)? onChanged,
    Widget? suffixLabel,
    Color? cursorColor,
    bool? enableInteractiveSelection,
    bool? readOnly,
    bool? isFilledBorder,
    Widget? label,
    String? autoCompleteKey,
    TextAlign? textAlign,
    GestureTapCallback? onTap,
  }) {
    return CommonInputFormField(
      textEditingController: textEditingController ?? this.textEditingController,
      onSelected: onSelected ?? this.onSelected,
      validator: validator ?? this.validator,
      placeholderText: placeholderText ?? this.placeholderText,
      placeholderTextStyle: placeholderTextStyle ?? this.placeholderTextStyle,
      hintText: hintText ?? this.hintText,
      hintTextStyle: hintTextStyle ?? this.hintTextStyle,
      fieldWidth: fieldWidth ?? this.fieldWidth,
      fieldHeight: fieldHeight ?? this.fieldHeight,
      backgroundColor: backgroundColor ?? this.backgroundColor,
      borderColor: borderColor ?? this.borderColor,
      borderWidth: borderWidth ?? this.borderWidth,
      borderRadius: borderRadius ?? this.borderRadius,
      fieldTextStyle: fieldTextStyle ?? this.fieldTextStyle,
      onFieldSubmitted: onFieldSubmitted ?? this.onFieldSubmitted,
      counterStyle: counterStyle ?? this.counterStyle,
      maxLines: maxLines ?? this.maxLines,
      maxLength: maxLength ?? this.maxLength,
      textInputFormatter: textInputFormatter ?? this.textInputFormatter,
      textInputAction: textInputAction ?? this.textInputAction,
      textInputType: textInputType ?? this.textInputType,
      textCapitalization: textCapitalization ?? this.textCapitalization,
      isEnable: isEnable ?? this.isEnable,
      prefixWidget: prefixWidget ?? this.prefixWidget,
      suffixWidget: suffixWidget ?? this.suffixWidget,
      inputDecoration: inputDecoration ?? this.inputDecoration,
      obscureText: obscureText ?? this.obscureText,
      leftPadding: leftPadding ?? this.leftPadding,
      rightPadding: rightPadding ?? this.rightPadding,
      topPadding: topPadding ?? this.topPadding,
      bottomPadding: bottomPadding ?? this.bottomPadding,
      fontSize: fontSize ?? this.fontSize,
      onChanged: onChanged ?? this.onChanged,
      suffixLabel: suffixLabel ?? this.suffixLabel,
      cursorColor: cursorColor ?? this.cursorColor,
      enableInteractiveSelection: enableInteractiveSelection ?? this.enableInteractiveSelection,
      readOnly: readOnly ?? this.readOnly,
      isFilledBorder: isFilledBorder ?? this.isFilledBorder,
      label: label ?? this.label,
      autoCompleteKey: autoCompleteKey ?? this.autoCompleteKey,
      textAlign: textAlign ?? this.textAlign,
      onTap: onTap ?? this.onTap,
      focusNode: focusNode ?? this.focusNode,
    );
  }
}
